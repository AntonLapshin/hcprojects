//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("Model", "Y_NORM_CELL_PARAM_FK", "Y_NORM_PARAMETERS", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NormManagementMVVM.Model.Y_NORM_PARAMETERS), "Y_NORM_NORMATIVE_CELL", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NormManagementMVVM.Model.Y_NORM_NORMATIVE_CELL), true)]
[assembly: EdmRelationshipAttribute("Model", "Y_NORM_CELL_ROW_FK", "Y_NORM_NORMATIVE_ROW", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NormManagementMVVM.Model.Y_NORM_NORMATIVE_ROW), "Y_NORM_NORMATIVE_CELL", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NormManagementMVVM.Model.Y_NORM_NORMATIVE_CELL), true)]
[assembly: EdmRelationshipAttribute("Model", "Y_NORM_PROF_FK", "Y_NORM_PROFILE_HEAD", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NormManagementMVVM.Model.Y_NORM_PROFILE_HEAD), "Y_NORM_NORMATIVE_HEAD", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NormManagementMVVM.Model.Y_NORM_NORMATIVE_HEAD), true)]
[assembly: EdmRelationshipAttribute("Model", "Y_NORM_ROW_HEAD_FK", "Y_NORM_NORMATIVE_HEAD", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NormManagementMVVM.Model.Y_NORM_NORMATIVE_HEAD), "Y_NORM_NORMATIVE_ROW", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NormManagementMVVM.Model.Y_NORM_NORMATIVE_ROW), true)]
[assembly: EdmRelationshipAttribute("Model", "Y_NORM_PROF_DETAIL_PARAM_FK", "Y_NORM_PARAMETERS", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NormManagementMVVM.Model.Y_NORM_PARAMETERS), "Y_NORM_PROFILE_DETAIL", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NormManagementMVVM.Model.Y_NORM_PROFILE_DETAIL), true)]
[assembly: EdmRelationshipAttribute("Model", "Y_NORM_PROFILE_DET_HEAD_FK", "Y_NORM_PROFILE_HEAD", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NormManagementMVVM.Model.Y_NORM_PROFILE_HEAD), "Y_NORM_PROFILE_DETAIL", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NormManagementMVVM.Model.Y_NORM_PROFILE_DETAIL), true)]
[assembly: EdmRelationshipAttribute("Model", "STR_STR_FK", "STORE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NormManagementMVVM.Model.STORE), "STORE1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NormManagementMVVM.Model.STORE), true)]
[assembly: EdmRelationshipAttribute("Model", "Y_NORM_EQUIP_STORE_STORE_FK", "STORE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NormManagementMVVM.Model.STORE), "Y_NORM_EQUIP_STORE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NormManagementMVVM.Model.Y_NORM_EQUIP_STORE), true)]
[assembly: EdmRelationshipAttribute("Model", "Y_NORM_EQUIP_FK", "Y_NORM_EQUIP_TYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NormManagementMVVM.Model.Y_NORM_EQUIP_TYPE), "Y_NORM_EQUIP_STORE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NormManagementMVVM.Model.Y_NORM_EQUIP_STORE), true)]
[assembly: EdmRelationshipAttribute("Model", "Y_NORM_PROFILE_EQUIP", "Y_NORM_EQUIP_TYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NormManagementMVVM.Model.Y_NORM_EQUIP_TYPE), "Y_NORM_PROFILE_HEAD", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NormManagementMVVM.Model.Y_NORM_PROFILE_HEAD), true)]
[assembly: EdmRelationshipAttribute("Model", "Y_NORM_CELL_CONTROLLER_FK", "Y_NORM_NORMATIVE_CONTROLLER", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NormManagementMVVM.Model.Y_NORM_NORMATIVE_CONTROLLER), "Y_NORM_NORMATIVE_CELL", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NormManagementMVVM.Model.Y_NORM_NORMATIVE_CELL), true)]

#endregion

namespace NormManagementMVVM.Model
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class NormEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект NormEntities, используя строку соединения из раздела "NormEntities" файла конфигурации приложения.
        /// </summary>
        public NormEntities() : base("name=NormEntities", "NormEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта NormEntities.
        /// </summary>
        public NormEntities(string connectionString) : base(connectionString, "NormEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта NormEntities.
        /// </summary>
        public NormEntities(EntityConnection connection) : base(connection, "NormEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Y_NORM_NORMATIVE_CELL> Y_NORM_NORMATIVE_CELL
        {
            get
            {
                if ((_Y_NORM_NORMATIVE_CELL == null))
                {
                    _Y_NORM_NORMATIVE_CELL = base.CreateObjectSet<Y_NORM_NORMATIVE_CELL>("Y_NORM_NORMATIVE_CELL");
                }
                return _Y_NORM_NORMATIVE_CELL;
            }
        }
        private ObjectSet<Y_NORM_NORMATIVE_CELL> _Y_NORM_NORMATIVE_CELL;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Y_NORM_NORMATIVE_HEAD> Y_NORM_NORMATIVE_HEAD
        {
            get
            {
                if ((_Y_NORM_NORMATIVE_HEAD == null))
                {
                    _Y_NORM_NORMATIVE_HEAD = base.CreateObjectSet<Y_NORM_NORMATIVE_HEAD>("Y_NORM_NORMATIVE_HEAD");
                }
                return _Y_NORM_NORMATIVE_HEAD;
            }
        }
        private ObjectSet<Y_NORM_NORMATIVE_HEAD> _Y_NORM_NORMATIVE_HEAD;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Y_NORM_NORMATIVE_ROW> Y_NORM_NORMATIVE_ROW
        {
            get
            {
                if ((_Y_NORM_NORMATIVE_ROW == null))
                {
                    _Y_NORM_NORMATIVE_ROW = base.CreateObjectSet<Y_NORM_NORMATIVE_ROW>("Y_NORM_NORMATIVE_ROW");
                }
                return _Y_NORM_NORMATIVE_ROW;
            }
        }
        private ObjectSet<Y_NORM_NORMATIVE_ROW> _Y_NORM_NORMATIVE_ROW;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Y_NORM_PARAMETERS> Y_NORM_PARAMETERS
        {
            get
            {
                if ((_Y_NORM_PARAMETERS == null))
                {
                    _Y_NORM_PARAMETERS = base.CreateObjectSet<Y_NORM_PARAMETERS>("Y_NORM_PARAMETERS");
                }
                return _Y_NORM_PARAMETERS;
            }
        }
        private ObjectSet<Y_NORM_PARAMETERS> _Y_NORM_PARAMETERS;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Y_NORM_PROFILE_DETAIL> Y_NORM_PROFILE_DETAIL
        {
            get
            {
                if ((_Y_NORM_PROFILE_DETAIL == null))
                {
                    _Y_NORM_PROFILE_DETAIL = base.CreateObjectSet<Y_NORM_PROFILE_DETAIL>("Y_NORM_PROFILE_DETAIL");
                }
                return _Y_NORM_PROFILE_DETAIL;
            }
        }
        private ObjectSet<Y_NORM_PROFILE_DETAIL> _Y_NORM_PROFILE_DETAIL;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Y_NORM_PROFILE_HEAD> Y_NORM_PROFILE_HEAD
        {
            get
            {
                if ((_Y_NORM_PROFILE_HEAD == null))
                {
                    _Y_NORM_PROFILE_HEAD = base.CreateObjectSet<Y_NORM_PROFILE_HEAD>("Y_NORM_PROFILE_HEAD");
                }
                return _Y_NORM_PROFILE_HEAD;
            }
        }
        private ObjectSet<Y_NORM_PROFILE_HEAD> _Y_NORM_PROFILE_HEAD;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<STORE> STORE
        {
            get
            {
                if ((_STORE == null))
                {
                    _STORE = base.CreateObjectSet<STORE>("STORE");
                }
                return _STORE;
            }
        }
        private ObjectSet<STORE> _STORE;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Y_NORM_EQUIP_STORE> Y_NORM_EQUIP_STORE
        {
            get
            {
                if ((_Y_NORM_EQUIP_STORE == null))
                {
                    _Y_NORM_EQUIP_STORE = base.CreateObjectSet<Y_NORM_EQUIP_STORE>("Y_NORM_EQUIP_STORE");
                }
                return _Y_NORM_EQUIP_STORE;
            }
        }
        private ObjectSet<Y_NORM_EQUIP_STORE> _Y_NORM_EQUIP_STORE;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Y_NORM_EQUIP_TYPE> Y_NORM_EQUIP_TYPE
        {
            get
            {
                if ((_Y_NORM_EQUIP_TYPE == null))
                {
                    _Y_NORM_EQUIP_TYPE = base.CreateObjectSet<Y_NORM_EQUIP_TYPE>("Y_NORM_EQUIP_TYPE");
                }
                return _Y_NORM_EQUIP_TYPE;
            }
        }
        private ObjectSet<Y_NORM_EQUIP_TYPE> _Y_NORM_EQUIP_TYPE;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Y_NORM_NORMATIVE_CONTROLLER> Y_NORM_NORMATIVE_CONTROLLER
        {
            get
            {
                if ((_Y_NORM_NORMATIVE_CONTROLLER == null))
                {
                    _Y_NORM_NORMATIVE_CONTROLLER = base.CreateObjectSet<Y_NORM_NORMATIVE_CONTROLLER>("Y_NORM_NORMATIVE_CONTROLLER");
                }
                return _Y_NORM_NORMATIVE_CONTROLLER;
            }
        }
        private ObjectSet<Y_NORM_NORMATIVE_CONTROLLER> _Y_NORM_NORMATIVE_CONTROLLER;

        #endregion
        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Y_NORM_NORMATIVE_CELL. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToY_NORM_NORMATIVE_CELL(Y_NORM_NORMATIVE_CELL y_NORM_NORMATIVE_CELL)
        {
            base.AddObject("Y_NORM_NORMATIVE_CELL", y_NORM_NORMATIVE_CELL);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Y_NORM_NORMATIVE_HEAD. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToY_NORM_NORMATIVE_HEAD(Y_NORM_NORMATIVE_HEAD y_NORM_NORMATIVE_HEAD)
        {
            base.AddObject("Y_NORM_NORMATIVE_HEAD", y_NORM_NORMATIVE_HEAD);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Y_NORM_NORMATIVE_ROW. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToY_NORM_NORMATIVE_ROW(Y_NORM_NORMATIVE_ROW y_NORM_NORMATIVE_ROW)
        {
            base.AddObject("Y_NORM_NORMATIVE_ROW", y_NORM_NORMATIVE_ROW);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Y_NORM_PARAMETERS. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToY_NORM_PARAMETERS(Y_NORM_PARAMETERS y_NORM_PARAMETERS)
        {
            base.AddObject("Y_NORM_PARAMETERS", y_NORM_PARAMETERS);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Y_NORM_PROFILE_DETAIL. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToY_NORM_PROFILE_DETAIL(Y_NORM_PROFILE_DETAIL y_NORM_PROFILE_DETAIL)
        {
            base.AddObject("Y_NORM_PROFILE_DETAIL", y_NORM_PROFILE_DETAIL);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Y_NORM_PROFILE_HEAD. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToY_NORM_PROFILE_HEAD(Y_NORM_PROFILE_HEAD y_NORM_PROFILE_HEAD)
        {
            base.AddObject("Y_NORM_PROFILE_HEAD", y_NORM_PROFILE_HEAD);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet STORE. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSTORE(STORE sTORE)
        {
            base.AddObject("STORE", sTORE);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Y_NORM_EQUIP_STORE. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToY_NORM_EQUIP_STORE(Y_NORM_EQUIP_STORE y_NORM_EQUIP_STORE)
        {
            base.AddObject("Y_NORM_EQUIP_STORE", y_NORM_EQUIP_STORE);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Y_NORM_EQUIP_TYPE. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToY_NORM_EQUIP_TYPE(Y_NORM_EQUIP_TYPE y_NORM_EQUIP_TYPE)
        {
            base.AddObject("Y_NORM_EQUIP_TYPE", y_NORM_EQUIP_TYPE);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Y_NORM_NORMATIVE_CONTROLLER. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToY_NORM_NORMATIVE_CONTROLLER(Y_NORM_NORMATIVE_CONTROLLER y_NORM_NORMATIVE_CONTROLLER)
        {
            base.AddObject("Y_NORM_NORMATIVE_CONTROLLER", y_NORM_NORMATIVE_CONTROLLER);
        }

        #endregion
        #region Импортируемые функции
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public int Y_NORM_MANAGEMENT_INIT_PROFILE_ITEM_STORE_PARAM()
        {
            return base.ExecuteFunction("Y_NORM_MANAGEMENT_INIT_PROFILE_ITEM_STORE_PARAM");
        }

        #endregion
    }
    

    #endregion
    
    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="STORE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class STORE : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта STORE.
        /// </summary>
        /// <param name="sTORE1">Исходное значение свойства STORE1.</param>
        /// <param name="sTORE_NAME">Исходное значение свойства STORE_NAME.</param>
        /// <param name="sTORE_NAME10">Исходное значение свойства STORE_NAME10.</param>
        /// <param name="sTORE_NAME3">Исходное значение свойства STORE_NAME3.</param>
        /// <param name="sTORE_CLASS">Исходное значение свойства STORE_CLASS.</param>
        /// <param name="sTORE_MGR_NAME">Исходное значение свойства STORE_MGR_NAME.</param>
        /// <param name="sTORE_OPEN_DATE">Исходное значение свойства STORE_OPEN_DATE.</param>
        /// <param name="sTOCKHOLDING_IND">Исходное значение свойства STOCKHOLDING_IND.</param>
        /// <param name="dISTRICT">Исходное значение свойства DISTRICT.</param>
        /// <param name="sTART_ORDER_DAYS">Исходное значение свойства START_ORDER_DAYS.</param>
        /// <param name="cURRENCY_CODE">Исходное значение свойства CURRENCY_CODE.</param>
        /// <param name="lANG">Исходное значение свойства LANG.</param>
        /// <param name="tRAN_NO_GENERATED">Исходное значение свойства TRAN_NO_GENERATED.</param>
        /// <param name="iNTEGRATED_POS_IND">Исходное значение свойства INTEGRATED_POS_IND.</param>
        /// <param name="oRIG_CURRENCY_CODE">Исходное значение свойства ORIG_CURRENCY_CODE.</param>
        public static STORE CreateSTORE(global::System.Int32 sTORE1, global::System.String sTORE_NAME, global::System.String sTORE_NAME10, global::System.String sTORE_NAME3, global::System.String sTORE_CLASS, global::System.String sTORE_MGR_NAME, global::System.DateTime sTORE_OPEN_DATE, global::System.String sTOCKHOLDING_IND, global::System.Int32 dISTRICT, global::System.Int16 sTART_ORDER_DAYS, global::System.String cURRENCY_CODE, global::System.Int32 lANG, global::System.String tRAN_NO_GENERATED, global::System.String iNTEGRATED_POS_IND, global::System.String oRIG_CURRENCY_CODE)
        {
            STORE sTORE = new STORE();
            sTORE.STORE1 = sTORE1;
            sTORE.STORE_NAME = sTORE_NAME;
            sTORE.STORE_NAME10 = sTORE_NAME10;
            sTORE.STORE_NAME3 = sTORE_NAME3;
            sTORE.STORE_CLASS = sTORE_CLASS;
            sTORE.STORE_MGR_NAME = sTORE_MGR_NAME;
            sTORE.STORE_OPEN_DATE = sTORE_OPEN_DATE;
            sTORE.STOCKHOLDING_IND = sTOCKHOLDING_IND;
            sTORE.DISTRICT = dISTRICT;
            sTORE.START_ORDER_DAYS = sTART_ORDER_DAYS;
            sTORE.CURRENCY_CODE = cURRENCY_CODE;
            sTORE.LANG = lANG;
            sTORE.TRAN_NO_GENERATED = tRAN_NO_GENERATED;
            sTORE.INTEGRATED_POS_IND = iNTEGRATED_POS_IND;
            sTORE.ORIG_CURRENCY_CODE = oRIG_CURRENCY_CODE;
            return sTORE;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 STORE1
        {
            get
            {
                return _STORE1;
            }
            set
            {
                if (_STORE1 != value)
                {
                    OnSTORE1Changing(value);
                    ReportPropertyChanging("STORE1");
                    _STORE1 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("STORE1");
                    OnSTORE1Changed();
                }
            }
        }
        private global::System.Int32 _STORE1;
        partial void OnSTORE1Changing(global::System.Int32 value);
        partial void OnSTORE1Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String STORE_NAME
        {
            get
            {
                return _STORE_NAME;
            }
            set
            {
                OnSTORE_NAMEChanging(value);
                ReportPropertyChanging("STORE_NAME");
                _STORE_NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("STORE_NAME");
                OnSTORE_NAMEChanged();
            }
        }
        private global::System.String _STORE_NAME;
        partial void OnSTORE_NAMEChanging(global::System.String value);
        partial void OnSTORE_NAMEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String STORE_NAME10
        {
            get
            {
                return _STORE_NAME10;
            }
            set
            {
                OnSTORE_NAME10Changing(value);
                ReportPropertyChanging("STORE_NAME10");
                _STORE_NAME10 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("STORE_NAME10");
                OnSTORE_NAME10Changed();
            }
        }
        private global::System.String _STORE_NAME10;
        partial void OnSTORE_NAME10Changing(global::System.String value);
        partial void OnSTORE_NAME10Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String STORE_NAME3
        {
            get
            {
                return _STORE_NAME3;
            }
            set
            {
                OnSTORE_NAME3Changing(value);
                ReportPropertyChanging("STORE_NAME3");
                _STORE_NAME3 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("STORE_NAME3");
                OnSTORE_NAME3Changed();
            }
        }
        private global::System.String _STORE_NAME3;
        partial void OnSTORE_NAME3Changing(global::System.String value);
        partial void OnSTORE_NAME3Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String STORE_NAME_SECONDARY
        {
            get
            {
                return _STORE_NAME_SECONDARY;
            }
            set
            {
                OnSTORE_NAME_SECONDARYChanging(value);
                ReportPropertyChanging("STORE_NAME_SECONDARY");
                _STORE_NAME_SECONDARY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("STORE_NAME_SECONDARY");
                OnSTORE_NAME_SECONDARYChanged();
            }
        }
        private global::System.String _STORE_NAME_SECONDARY;
        partial void OnSTORE_NAME_SECONDARYChanging(global::System.String value);
        partial void OnSTORE_NAME_SECONDARYChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String STORE_CLASS
        {
            get
            {
                return _STORE_CLASS;
            }
            set
            {
                OnSTORE_CLASSChanging(value);
                ReportPropertyChanging("STORE_CLASS");
                _STORE_CLASS = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("STORE_CLASS");
                OnSTORE_CLASSChanged();
            }
        }
        private global::System.String _STORE_CLASS;
        partial void OnSTORE_CLASSChanging(global::System.String value);
        partial void OnSTORE_CLASSChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String STORE_MGR_NAME
        {
            get
            {
                return _STORE_MGR_NAME;
            }
            set
            {
                OnSTORE_MGR_NAMEChanging(value);
                ReportPropertyChanging("STORE_MGR_NAME");
                _STORE_MGR_NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("STORE_MGR_NAME");
                OnSTORE_MGR_NAMEChanged();
            }
        }
        private global::System.String _STORE_MGR_NAME;
        partial void OnSTORE_MGR_NAMEChanging(global::System.String value);
        partial void OnSTORE_MGR_NAMEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime STORE_OPEN_DATE
        {
            get
            {
                return _STORE_OPEN_DATE;
            }
            set
            {
                OnSTORE_OPEN_DATEChanging(value);
                ReportPropertyChanging("STORE_OPEN_DATE");
                _STORE_OPEN_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("STORE_OPEN_DATE");
                OnSTORE_OPEN_DATEChanged();
            }
        }
        private global::System.DateTime _STORE_OPEN_DATE;
        partial void OnSTORE_OPEN_DATEChanging(global::System.DateTime value);
        partial void OnSTORE_OPEN_DATEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> STORE_CLOSE_DATE
        {
            get
            {
                return _STORE_CLOSE_DATE;
            }
            set
            {
                OnSTORE_CLOSE_DATEChanging(value);
                ReportPropertyChanging("STORE_CLOSE_DATE");
                _STORE_CLOSE_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("STORE_CLOSE_DATE");
                OnSTORE_CLOSE_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _STORE_CLOSE_DATE;
        partial void OnSTORE_CLOSE_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnSTORE_CLOSE_DATEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ACQUIRED_DATE
        {
            get
            {
                return _ACQUIRED_DATE;
            }
            set
            {
                OnACQUIRED_DATEChanging(value);
                ReportPropertyChanging("ACQUIRED_DATE");
                _ACQUIRED_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ACQUIRED_DATE");
                OnACQUIRED_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _ACQUIRED_DATE;
        partial void OnACQUIRED_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnACQUIRED_DATEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> REMODEL_DATE
        {
            get
            {
                return _REMODEL_DATE;
            }
            set
            {
                OnREMODEL_DATEChanging(value);
                ReportPropertyChanging("REMODEL_DATE");
                _REMODEL_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("REMODEL_DATE");
                OnREMODEL_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _REMODEL_DATE;
        partial void OnREMODEL_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnREMODEL_DATEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FAX_NUMBER
        {
            get
            {
                return _FAX_NUMBER;
            }
            set
            {
                OnFAX_NUMBERChanging(value);
                ReportPropertyChanging("FAX_NUMBER");
                _FAX_NUMBER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FAX_NUMBER");
                OnFAX_NUMBERChanged();
            }
        }
        private global::System.String _FAX_NUMBER;
        partial void OnFAX_NUMBERChanging(global::System.String value);
        partial void OnFAX_NUMBERChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PHONE_NUMBER
        {
            get
            {
                return _PHONE_NUMBER;
            }
            set
            {
                OnPHONE_NUMBERChanging(value);
                ReportPropertyChanging("PHONE_NUMBER");
                _PHONE_NUMBER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PHONE_NUMBER");
                OnPHONE_NUMBERChanged();
            }
        }
        private global::System.String _PHONE_NUMBER;
        partial void OnPHONE_NUMBERChanging(global::System.String value);
        partial void OnPHONE_NUMBERChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMAIL
        {
            get
            {
                return _EMAIL;
            }
            set
            {
                OnEMAILChanging(value);
                ReportPropertyChanging("EMAIL");
                _EMAIL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMAIL");
                OnEMAILChanged();
            }
        }
        private global::System.String _EMAIL;
        partial void OnEMAILChanging(global::System.String value);
        partial void OnEMAILChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TOTAL_SQUARE_FT
        {
            get
            {
                return _TOTAL_SQUARE_FT;
            }
            set
            {
                OnTOTAL_SQUARE_FTChanging(value);
                ReportPropertyChanging("TOTAL_SQUARE_FT");
                _TOTAL_SQUARE_FT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TOTAL_SQUARE_FT");
                OnTOTAL_SQUARE_FTChanged();
            }
        }
        private Nullable<global::System.Int32> _TOTAL_SQUARE_FT;
        partial void OnTOTAL_SQUARE_FTChanging(Nullable<global::System.Int32> value);
        partial void OnTOTAL_SQUARE_FTChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SELLING_SQUARE_FT
        {
            get
            {
                return _SELLING_SQUARE_FT;
            }
            set
            {
                OnSELLING_SQUARE_FTChanging(value);
                ReportPropertyChanging("SELLING_SQUARE_FT");
                _SELLING_SQUARE_FT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SELLING_SQUARE_FT");
                OnSELLING_SQUARE_FTChanged();
            }
        }
        private Nullable<global::System.Int32> _SELLING_SQUARE_FT;
        partial void OnSELLING_SQUARE_FTChanging(Nullable<global::System.Int32> value);
        partial void OnSELLING_SQUARE_FTChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LINEAR_DISTANCE
        {
            get
            {
                return _LINEAR_DISTANCE;
            }
            set
            {
                OnLINEAR_DISTANCEChanging(value);
                ReportPropertyChanging("LINEAR_DISTANCE");
                _LINEAR_DISTANCE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LINEAR_DISTANCE");
                OnLINEAR_DISTANCEChanged();
            }
        }
        private Nullable<global::System.Int32> _LINEAR_DISTANCE;
        partial void OnLINEAR_DISTANCEChanging(Nullable<global::System.Int32> value);
        partial void OnLINEAR_DISTANCEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> VAT_REGION
        {
            get
            {
                return _VAT_REGION;
            }
            set
            {
                OnVAT_REGIONChanging(value);
                ReportPropertyChanging("VAT_REGION");
                _VAT_REGION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VAT_REGION");
                OnVAT_REGIONChanged();
            }
        }
        private Nullable<global::System.Int16> _VAT_REGION;
        partial void OnVAT_REGIONChanging(Nullable<global::System.Int16> value);
        partial void OnVAT_REGIONChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VAT_INCLUDE_IND
        {
            get
            {
                return _VAT_INCLUDE_IND;
            }
            set
            {
                OnVAT_INCLUDE_INDChanging(value);
                ReportPropertyChanging("VAT_INCLUDE_IND");
                _VAT_INCLUDE_IND = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VAT_INCLUDE_IND");
                OnVAT_INCLUDE_INDChanged();
            }
        }
        private global::System.String _VAT_INCLUDE_IND;
        partial void OnVAT_INCLUDE_INDChanging(global::System.String value);
        partial void OnVAT_INCLUDE_INDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String STOCKHOLDING_IND
        {
            get
            {
                return _STOCKHOLDING_IND;
            }
            set
            {
                OnSTOCKHOLDING_INDChanging(value);
                ReportPropertyChanging("STOCKHOLDING_IND");
                _STOCKHOLDING_IND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("STOCKHOLDING_IND");
                OnSTOCKHOLDING_INDChanged();
            }
        }
        private global::System.String _STOCKHOLDING_IND;
        partial void OnSTOCKHOLDING_INDChanging(global::System.String value);
        partial void OnSTOCKHOLDING_INDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> CHANNEL_ID
        {
            get
            {
                return _CHANNEL_ID;
            }
            set
            {
                OnCHANNEL_IDChanging(value);
                ReportPropertyChanging("CHANNEL_ID");
                _CHANNEL_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CHANNEL_ID");
                OnCHANNEL_IDChanged();
            }
        }
        private Nullable<global::System.Int16> _CHANNEL_ID;
        partial void OnCHANNEL_IDChanging(Nullable<global::System.Int16> value);
        partial void OnCHANNEL_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> STORE_FORMAT
        {
            get
            {
                return _STORE_FORMAT;
            }
            set
            {
                OnSTORE_FORMATChanging(value);
                ReportPropertyChanging("STORE_FORMAT");
                _STORE_FORMAT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("STORE_FORMAT");
                OnSTORE_FORMATChanged();
            }
        }
        private Nullable<global::System.Int16> _STORE_FORMAT;
        partial void OnSTORE_FORMATChanging(Nullable<global::System.Int16> value);
        partial void OnSTORE_FORMATChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MALL_NAME
        {
            get
            {
                return _MALL_NAME;
            }
            set
            {
                OnMALL_NAMEChanging(value);
                ReportPropertyChanging("MALL_NAME");
                _MALL_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MALL_NAME");
                OnMALL_NAMEChanged();
            }
        }
        private global::System.String _MALL_NAME;
        partial void OnMALL_NAMEChanging(global::System.String value);
        partial void OnMALL_NAMEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DISTRICT
        {
            get
            {
                return _DISTRICT;
            }
            set
            {
                OnDISTRICTChanging(value);
                ReportPropertyChanging("DISTRICT");
                _DISTRICT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DISTRICT");
                OnDISTRICTChanged();
            }
        }
        private global::System.Int32 _DISTRICT;
        partial void OnDISTRICTChanging(global::System.Int32 value);
        partial void OnDISTRICTChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> TRANSFER_ZONE
        {
            get
            {
                return _TRANSFER_ZONE;
            }
            set
            {
                OnTRANSFER_ZONEChanging(value);
                ReportPropertyChanging("TRANSFER_ZONE");
                _TRANSFER_ZONE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TRANSFER_ZONE");
                OnTRANSFER_ZONEChanged();
            }
        }
        private Nullable<global::System.Int16> _TRANSFER_ZONE;
        partial void OnTRANSFER_ZONEChanging(Nullable<global::System.Int16> value);
        partial void OnTRANSFER_ZONEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DEFAULT_WH
        {
            get
            {
                return _DEFAULT_WH;
            }
            set
            {
                OnDEFAULT_WHChanging(value);
                ReportPropertyChanging("DEFAULT_WH");
                _DEFAULT_WH = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEFAULT_WH");
                OnDEFAULT_WHChanged();
            }
        }
        private Nullable<global::System.Int32> _DEFAULT_WH;
        partial void OnDEFAULT_WHChanging(Nullable<global::System.Int32> value);
        partial void OnDEFAULT_WHChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> STOP_ORDER_DAYS
        {
            get
            {
                return _STOP_ORDER_DAYS;
            }
            set
            {
                OnSTOP_ORDER_DAYSChanging(value);
                ReportPropertyChanging("STOP_ORDER_DAYS");
                _STOP_ORDER_DAYS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("STOP_ORDER_DAYS");
                OnSTOP_ORDER_DAYSChanged();
            }
        }
        private Nullable<global::System.Int16> _STOP_ORDER_DAYS;
        partial void OnSTOP_ORDER_DAYSChanging(Nullable<global::System.Int16> value);
        partial void OnSTOP_ORDER_DAYSChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 START_ORDER_DAYS
        {
            get
            {
                return _START_ORDER_DAYS;
            }
            set
            {
                OnSTART_ORDER_DAYSChanging(value);
                ReportPropertyChanging("START_ORDER_DAYS");
                _START_ORDER_DAYS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("START_ORDER_DAYS");
                OnSTART_ORDER_DAYSChanged();
            }
        }
        private global::System.Int16 _START_ORDER_DAYS;
        partial void OnSTART_ORDER_DAYSChanging(global::System.Int16 value);
        partial void OnSTART_ORDER_DAYSChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CURRENCY_CODE
        {
            get
            {
                return _CURRENCY_CODE;
            }
            set
            {
                OnCURRENCY_CODEChanging(value);
                ReportPropertyChanging("CURRENCY_CODE");
                _CURRENCY_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CURRENCY_CODE");
                OnCURRENCY_CODEChanged();
            }
        }
        private global::System.String _CURRENCY_CODE;
        partial void OnCURRENCY_CODEChanging(global::System.String value);
        partial void OnCURRENCY_CODEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LANG
        {
            get
            {
                return _LANG;
            }
            set
            {
                OnLANGChanging(value);
                ReportPropertyChanging("LANG");
                _LANG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LANG");
                OnLANGChanged();
            }
        }
        private global::System.Int32 _LANG;
        partial void OnLANGChanging(global::System.Int32 value);
        partial void OnLANGChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TRAN_NO_GENERATED
        {
            get
            {
                return _TRAN_NO_GENERATED;
            }
            set
            {
                OnTRAN_NO_GENERATEDChanging(value);
                ReportPropertyChanging("TRAN_NO_GENERATED");
                _TRAN_NO_GENERATED = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TRAN_NO_GENERATED");
                OnTRAN_NO_GENERATEDChanged();
            }
        }
        private global::System.String _TRAN_NO_GENERATED;
        partial void OnTRAN_NO_GENERATEDChanging(global::System.String value);
        partial void OnTRAN_NO_GENERATEDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String INTEGRATED_POS_IND
        {
            get
            {
                return _INTEGRATED_POS_IND;
            }
            set
            {
                OnINTEGRATED_POS_INDChanging(value);
                ReportPropertyChanging("INTEGRATED_POS_IND");
                _INTEGRATED_POS_IND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("INTEGRATED_POS_IND");
                OnINTEGRATED_POS_INDChanged();
            }
        }
        private global::System.String _INTEGRATED_POS_IND;
        partial void OnINTEGRATED_POS_INDChanging(global::System.String value);
        partial void OnINTEGRATED_POS_INDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ORIG_CURRENCY_CODE
        {
            get
            {
                return _ORIG_CURRENCY_CODE;
            }
            set
            {
                OnORIG_CURRENCY_CODEChanging(value);
                ReportPropertyChanging("ORIG_CURRENCY_CODE");
                _ORIG_CURRENCY_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ORIG_CURRENCY_CODE");
                OnORIG_CURRENCY_CODEChanged();
            }
        }
        private global::System.String _ORIG_CURRENCY_CODE;
        partial void OnORIG_CURRENCY_CODEChanging(global::System.String value);
        partial void OnORIG_CURRENCY_CODEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DUNS_NUMBER
        {
            get
            {
                return _DUNS_NUMBER;
            }
            set
            {
                OnDUNS_NUMBERChanging(value);
                ReportPropertyChanging("DUNS_NUMBER");
                _DUNS_NUMBER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DUNS_NUMBER");
                OnDUNS_NUMBERChanged();
            }
        }
        private global::System.String _DUNS_NUMBER;
        partial void OnDUNS_NUMBERChanging(global::System.String value);
        partial void OnDUNS_NUMBERChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DUNS_LOC
        {
            get
            {
                return _DUNS_LOC;
            }
            set
            {
                OnDUNS_LOCChanging(value);
                ReportPropertyChanging("DUNS_LOC");
                _DUNS_LOC = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DUNS_LOC");
                OnDUNS_LOCChanged();
            }
        }
        private global::System.String _DUNS_LOC;
        partial void OnDUNS_LOCChanging(global::System.String value);
        partial void OnDUNS_LOCChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SISTER_STORE
        {
            get
            {
                return _SISTER_STORE;
            }
            set
            {
                OnSISTER_STOREChanging(value);
                ReportPropertyChanging("SISTER_STORE");
                _SISTER_STORE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SISTER_STORE");
                OnSISTER_STOREChanged();
            }
        }
        private Nullable<global::System.Int32> _SISTER_STORE;
        partial void OnSISTER_STOREChanging(Nullable<global::System.Int32> value);
        partial void OnSISTER_STOREChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TSF_ENTITY_ID
        {
            get
            {
                return _TSF_ENTITY_ID;
            }
            set
            {
                OnTSF_ENTITY_IDChanging(value);
                ReportPropertyChanging("TSF_ENTITY_ID");
                _TSF_ENTITY_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TSF_ENTITY_ID");
                OnTSF_ENTITY_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _TSF_ENTITY_ID;
        partial void OnTSF_ENTITY_IDChanging(Nullable<global::System.Int32> value);
        partial void OnTSF_ENTITY_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ORG_UNIT_ID
        {
            get
            {
                return _ORG_UNIT_ID;
            }
            set
            {
                OnORG_UNIT_IDChanging(value);
                ReportPropertyChanging("ORG_UNIT_ID");
                _ORG_UNIT_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ORG_UNIT_ID");
                OnORG_UNIT_IDChanged();
            }
        }
        private Nullable<global::System.Int64> _ORG_UNIT_ID;
        partial void OnORG_UNIT_IDChanging(Nullable<global::System.Int64> value);
        partial void OnORG_UNIT_IDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "STR_STR_FK", "STORE1")]
        public EntityCollection<STORE> STORE11
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<STORE>("Model.STR_STR_FK", "STORE1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<STORE>("Model.STR_STR_FK", "STORE1", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "STR_STR_FK", "STORE")]
        public STORE STORE2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STORE>("Model.STR_STR_FK", "STORE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STORE>("Model.STR_STR_FK", "STORE").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<STORE> STORE2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STORE>("Model.STR_STR_FK", "STORE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<STORE>("Model.STR_STR_FK", "STORE", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "Y_NORM_EQUIP_STORE_STORE_FK", "Y_NORM_EQUIP_STORE")]
        public EntityCollection<Y_NORM_EQUIP_STORE> Y_NORM_EQUIP_STORE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Y_NORM_EQUIP_STORE>("Model.Y_NORM_EQUIP_STORE_STORE_FK", "Y_NORM_EQUIP_STORE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Y_NORM_EQUIP_STORE>("Model.Y_NORM_EQUIP_STORE_STORE_FK", "Y_NORM_EQUIP_STORE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Y_NORM_EQUIP_STORE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Y_NORM_EQUIP_STORE : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Y_NORM_EQUIP_STORE.
        /// </summary>
        /// <param name="sTORE">Исходное значение свойства STORE.</param>
        /// <param name="iD_EQUIP">Исходное значение свойства ID_EQUIP.</param>
        public static Y_NORM_EQUIP_STORE CreateY_NORM_EQUIP_STORE(global::System.Int32 sTORE, global::System.Int64 iD_EQUIP)
        {
            Y_NORM_EQUIP_STORE y_NORM_EQUIP_STORE = new Y_NORM_EQUIP_STORE();
            y_NORM_EQUIP_STORE.STORE = sTORE;
            y_NORM_EQUIP_STORE.ID_EQUIP = iD_EQUIP;
            return y_NORM_EQUIP_STORE;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 STORE
        {
            get
            {
                return _STORE;
            }
            set
            {
                if (_STORE != value)
                {
                    OnSTOREChanging(value);
                    ReportPropertyChanging("STORE");
                    _STORE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("STORE");
                    OnSTOREChanged();
                }
            }
        }
        private global::System.Int32 _STORE;
        partial void OnSTOREChanging(global::System.Int32 value);
        partial void OnSTOREChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID_EQUIP
        {
            get
            {
                return _ID_EQUIP;
            }
            set
            {
                if (_ID_EQUIP != value)
                {
                    OnID_EQUIPChanging(value);
                    ReportPropertyChanging("ID_EQUIP");
                    _ID_EQUIP = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID_EQUIP");
                    OnID_EQUIPChanged();
                }
            }
        }
        private global::System.Int64 _ID_EQUIP;
        partial void OnID_EQUIPChanging(global::System.Int64 value);
        partial void OnID_EQUIPChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> STANDARD
        {
            get
            {
                return _STANDARD;
            }
            set
            {
                OnSTANDARDChanging(value);
                ReportPropertyChanging("STANDARD");
                _STANDARD = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("STANDARD");
                OnSTANDARDChanged();
            }
        }
        private Nullable<global::System.Int32> _STANDARD;
        partial void OnSTANDARDChanging(Nullable<global::System.Int32> value);
        partial void OnSTANDARDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CREATE_ID
        {
            get
            {
                return _CREATE_ID;
            }
            set
            {
                OnCREATE_IDChanging(value);
                ReportPropertyChanging("CREATE_ID");
                _CREATE_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CREATE_ID");
                OnCREATE_IDChanged();
            }
        }
        private global::System.String _CREATE_ID;
        partial void OnCREATE_IDChanging(global::System.String value);
        partial void OnCREATE_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CREATE_DATETIME
        {
            get
            {
                return _CREATE_DATETIME;
            }
            set
            {
                OnCREATE_DATETIMEChanging(value);
                ReportPropertyChanging("CREATE_DATETIME");
                _CREATE_DATETIME = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CREATE_DATETIME");
                OnCREATE_DATETIMEChanged();
            }
        }
        private Nullable<global::System.DateTime> _CREATE_DATETIME;
        partial void OnCREATE_DATETIMEChanging(Nullable<global::System.DateTime> value);
        partial void OnCREATE_DATETIMEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LAST_UPDATE_ID
        {
            get
            {
                return _LAST_UPDATE_ID;
            }
            set
            {
                OnLAST_UPDATE_IDChanging(value);
                ReportPropertyChanging("LAST_UPDATE_ID");
                _LAST_UPDATE_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LAST_UPDATE_ID");
                OnLAST_UPDATE_IDChanged();
            }
        }
        private global::System.String _LAST_UPDATE_ID;
        partial void OnLAST_UPDATE_IDChanging(global::System.String value);
        partial void OnLAST_UPDATE_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LAST_UPDATE_DATETIME
        {
            get
            {
                return _LAST_UPDATE_DATETIME;
            }
            set
            {
                OnLAST_UPDATE_DATETIMEChanging(value);
                ReportPropertyChanging("LAST_UPDATE_DATETIME");
                _LAST_UPDATE_DATETIME = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LAST_UPDATE_DATETIME");
                OnLAST_UPDATE_DATETIMEChanged();
            }
        }
        private Nullable<global::System.DateTime> _LAST_UPDATE_DATETIME;
        partial void OnLAST_UPDATE_DATETIMEChanging(Nullable<global::System.DateTime> value);
        partial void OnLAST_UPDATE_DATETIMEChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "Y_NORM_EQUIP_STORE_STORE_FK", "STORE")]
        public STORE STORE1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STORE>("Model.Y_NORM_EQUIP_STORE_STORE_FK", "STORE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STORE>("Model.Y_NORM_EQUIP_STORE_STORE_FK", "STORE").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<STORE> STORE1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STORE>("Model.Y_NORM_EQUIP_STORE_STORE_FK", "STORE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<STORE>("Model.Y_NORM_EQUIP_STORE_STORE_FK", "STORE", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "Y_NORM_EQUIP_FK", "Y_NORM_EQUIP_TYPE")]
        public Y_NORM_EQUIP_TYPE Y_NORM_EQUIP_TYPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Y_NORM_EQUIP_TYPE>("Model.Y_NORM_EQUIP_FK", "Y_NORM_EQUIP_TYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Y_NORM_EQUIP_TYPE>("Model.Y_NORM_EQUIP_FK", "Y_NORM_EQUIP_TYPE").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Y_NORM_EQUIP_TYPE> Y_NORM_EQUIP_TYPEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Y_NORM_EQUIP_TYPE>("Model.Y_NORM_EQUIP_FK", "Y_NORM_EQUIP_TYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Y_NORM_EQUIP_TYPE>("Model.Y_NORM_EQUIP_FK", "Y_NORM_EQUIP_TYPE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Y_NORM_EQUIP_TYPE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Y_NORM_EQUIP_TYPE : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Y_NORM_EQUIP_TYPE.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        public static Y_NORM_EQUIP_TYPE CreateY_NORM_EQUIP_TYPE(global::System.Int64 id)
        {
            Y_NORM_EQUIP_TYPE y_NORM_EQUIP_TYPE = new Y_NORM_EQUIP_TYPE();
            y_NORM_EQUIP_TYPE.ID = id;
            return y_NORM_EQUIP_TYPE;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DESCRIPTION
        {
            get
            {
                return _DESCRIPTION;
            }
            set
            {
                OnDESCRIPTIONChanging(value);
                ReportPropertyChanging("DESCRIPTION");
                _DESCRIPTION = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DESCRIPTION");
                OnDESCRIPTIONChanged();
            }
        }
        private global::System.String _DESCRIPTION;
        partial void OnDESCRIPTIONChanging(global::System.String value);
        partial void OnDESCRIPTIONChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CREATE_ID
        {
            get
            {
                return _CREATE_ID;
            }
            set
            {
                OnCREATE_IDChanging(value);
                ReportPropertyChanging("CREATE_ID");
                _CREATE_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CREATE_ID");
                OnCREATE_IDChanged();
            }
        }
        private global::System.String _CREATE_ID;
        partial void OnCREATE_IDChanging(global::System.String value);
        partial void OnCREATE_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CREATE_DATETIME
        {
            get
            {
                return _CREATE_DATETIME;
            }
            set
            {
                OnCREATE_DATETIMEChanging(value);
                ReportPropertyChanging("CREATE_DATETIME");
                _CREATE_DATETIME = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CREATE_DATETIME");
                OnCREATE_DATETIMEChanged();
            }
        }
        private Nullable<global::System.DateTime> _CREATE_DATETIME;
        partial void OnCREATE_DATETIMEChanging(Nullable<global::System.DateTime> value);
        partial void OnCREATE_DATETIMEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LAST_UPDATE_ID
        {
            get
            {
                return _LAST_UPDATE_ID;
            }
            set
            {
                OnLAST_UPDATE_IDChanging(value);
                ReportPropertyChanging("LAST_UPDATE_ID");
                _LAST_UPDATE_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LAST_UPDATE_ID");
                OnLAST_UPDATE_IDChanged();
            }
        }
        private global::System.String _LAST_UPDATE_ID;
        partial void OnLAST_UPDATE_IDChanging(global::System.String value);
        partial void OnLAST_UPDATE_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LAST_UPDATE_DATETIME
        {
            get
            {
                return _LAST_UPDATE_DATETIME;
            }
            set
            {
                OnLAST_UPDATE_DATETIMEChanging(value);
                ReportPropertyChanging("LAST_UPDATE_DATETIME");
                _LAST_UPDATE_DATETIME = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LAST_UPDATE_DATETIME");
                OnLAST_UPDATE_DATETIMEChanged();
            }
        }
        private Nullable<global::System.DateTime> _LAST_UPDATE_DATETIME;
        partial void OnLAST_UPDATE_DATETIMEChanging(Nullable<global::System.DateTime> value);
        partial void OnLAST_UPDATE_DATETIMEChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "Y_NORM_EQUIP_FK", "Y_NORM_EQUIP_STORE")]
        public EntityCollection<Y_NORM_EQUIP_STORE> Y_NORM_EQUIP_STORE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Y_NORM_EQUIP_STORE>("Model.Y_NORM_EQUIP_FK", "Y_NORM_EQUIP_STORE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Y_NORM_EQUIP_STORE>("Model.Y_NORM_EQUIP_FK", "Y_NORM_EQUIP_STORE", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "Y_NORM_PROFILE_EQUIP", "Y_NORM_PROFILE_HEAD")]
        public EntityCollection<Y_NORM_PROFILE_HEAD> Y_NORM_PROFILE_HEAD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Y_NORM_PROFILE_HEAD>("Model.Y_NORM_PROFILE_EQUIP", "Y_NORM_PROFILE_HEAD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Y_NORM_PROFILE_HEAD>("Model.Y_NORM_PROFILE_EQUIP", "Y_NORM_PROFILE_HEAD", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Y_NORM_NORMATIVE_CELL")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Y_NORM_NORMATIVE_CELL : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Y_NORM_NORMATIVE_CELL.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="iD_ROW">Исходное значение свойства ID_ROW.</param>
        /// <param name="iD_COLUMN">Исходное значение свойства ID_COLUMN.</param>
        /// <param name="iD_PARAM">Исходное значение свойства ID_PARAM.</param>
        /// <param name="pARAM_VALUE">Исходное значение свойства PARAM_VALUE.</param>
        public static Y_NORM_NORMATIVE_CELL CreateY_NORM_NORMATIVE_CELL(global::System.Int64 id, global::System.Int64 iD_ROW, global::System.Int64 iD_COLUMN, global::System.Int64 iD_PARAM, global::System.String pARAM_VALUE)
        {
            Y_NORM_NORMATIVE_CELL y_NORM_NORMATIVE_CELL = new Y_NORM_NORMATIVE_CELL();
            y_NORM_NORMATIVE_CELL.ID = id;
            y_NORM_NORMATIVE_CELL.ID_ROW = iD_ROW;
            y_NORM_NORMATIVE_CELL.ID_COLUMN = iD_COLUMN;
            y_NORM_NORMATIVE_CELL.ID_PARAM = iD_PARAM;
            y_NORM_NORMATIVE_CELL.PARAM_VALUE = pARAM_VALUE;
            return y_NORM_NORMATIVE_CELL;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID_ROW
        {
            get
            {
                return _ID_ROW;
            }
            set
            {
                if (_ID_ROW != value)
                {
                    OnID_ROWChanging(value);
                    ReportPropertyChanging("ID_ROW");
                    _ID_ROW = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID_ROW");
                    OnID_ROWChanged();
                }
            }
        }
        private global::System.Int64 _ID_ROW;
        partial void OnID_ROWChanging(global::System.Int64 value);
        partial void OnID_ROWChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID_COLUMN
        {
            get
            {
                return _ID_COLUMN;
            }
            set
            {
                if (_ID_COLUMN != value)
                {
                    OnID_COLUMNChanging(value);
                    ReportPropertyChanging("ID_COLUMN");
                    _ID_COLUMN = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID_COLUMN");
                    OnID_COLUMNChanged();
                }
            }
        }
        private global::System.Int64 _ID_COLUMN;
        partial void OnID_COLUMNChanging(global::System.Int64 value);
        partial void OnID_COLUMNChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID_PARAM
        {
            get
            {
                return _ID_PARAM;
            }
            set
            {
                OnID_PARAMChanging(value);
                ReportPropertyChanging("ID_PARAM");
                _ID_PARAM = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID_PARAM");
                OnID_PARAMChanged();
            }
        }
        private global::System.Int64 _ID_PARAM;
        partial void OnID_PARAMChanging(global::System.Int64 value);
        partial void OnID_PARAMChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PARAM_VALUE
        {
            get
            {
                return _PARAM_VALUE;
            }
            set
            {
                OnPARAM_VALUEChanging(value);
                ReportPropertyChanging("PARAM_VALUE");
                _PARAM_VALUE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PARAM_VALUE");
                OnPARAM_VALUEChanged();
            }
        }
        private global::System.String _PARAM_VALUE;
        partial void OnPARAM_VALUEChanging(global::System.String value);
        partial void OnPARAM_VALUEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CONTROLLER
        {
            get
            {
                return _CONTROLLER;
            }
            set
            {
                OnCONTROLLERChanging(value);
                ReportPropertyChanging("CONTROLLER");
                _CONTROLLER = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CONTROLLER");
                OnCONTROLLERChanged();
            }
        }
        private Nullable<global::System.Int32> _CONTROLLER;
        partial void OnCONTROLLERChanging(Nullable<global::System.Int32> value);
        partial void OnCONTROLLERChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "Y_NORM_CELL_PARAM_FK", "Y_NORM_PARAMETERS")]
        public Y_NORM_PARAMETERS Y_NORM_PARAMETERS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Y_NORM_PARAMETERS>("Model.Y_NORM_CELL_PARAM_FK", "Y_NORM_PARAMETERS").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Y_NORM_PARAMETERS>("Model.Y_NORM_CELL_PARAM_FK", "Y_NORM_PARAMETERS").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Y_NORM_PARAMETERS> Y_NORM_PARAMETERSReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Y_NORM_PARAMETERS>("Model.Y_NORM_CELL_PARAM_FK", "Y_NORM_PARAMETERS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Y_NORM_PARAMETERS>("Model.Y_NORM_CELL_PARAM_FK", "Y_NORM_PARAMETERS", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "Y_NORM_CELL_ROW_FK", "Y_NORM_NORMATIVE_ROW")]
        public Y_NORM_NORMATIVE_ROW Y_NORM_NORMATIVE_ROW
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Y_NORM_NORMATIVE_ROW>("Model.Y_NORM_CELL_ROW_FK", "Y_NORM_NORMATIVE_ROW").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Y_NORM_NORMATIVE_ROW>("Model.Y_NORM_CELL_ROW_FK", "Y_NORM_NORMATIVE_ROW").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Y_NORM_NORMATIVE_ROW> Y_NORM_NORMATIVE_ROWReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Y_NORM_NORMATIVE_ROW>("Model.Y_NORM_CELL_ROW_FK", "Y_NORM_NORMATIVE_ROW");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Y_NORM_NORMATIVE_ROW>("Model.Y_NORM_CELL_ROW_FK", "Y_NORM_NORMATIVE_ROW", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "Y_NORM_CELL_CONTROLLER_FK", "Y_NORM_NORMATIVE_CONTROLLER")]
        public Y_NORM_NORMATIVE_CONTROLLER Y_NORM_NORMATIVE_CONTROLLER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Y_NORM_NORMATIVE_CONTROLLER>("Model.Y_NORM_CELL_CONTROLLER_FK", "Y_NORM_NORMATIVE_CONTROLLER").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Y_NORM_NORMATIVE_CONTROLLER>("Model.Y_NORM_CELL_CONTROLLER_FK", "Y_NORM_NORMATIVE_CONTROLLER").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Y_NORM_NORMATIVE_CONTROLLER> Y_NORM_NORMATIVE_CONTROLLERReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Y_NORM_NORMATIVE_CONTROLLER>("Model.Y_NORM_CELL_CONTROLLER_FK", "Y_NORM_NORMATIVE_CONTROLLER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Y_NORM_NORMATIVE_CONTROLLER>("Model.Y_NORM_CELL_CONTROLLER_FK", "Y_NORM_NORMATIVE_CONTROLLER", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Y_NORM_NORMATIVE_CONTROLLER")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Y_NORM_NORMATIVE_CONTROLLER : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Y_NORM_NORMATIVE_CONTROLLER.
        /// </summary>
        /// <param name="cONTROLLER">Исходное значение свойства CONTROLLER.</param>
        public static Y_NORM_NORMATIVE_CONTROLLER CreateY_NORM_NORMATIVE_CONTROLLER(global::System.Int32 cONTROLLER)
        {
            Y_NORM_NORMATIVE_CONTROLLER y_NORM_NORMATIVE_CONTROLLER = new Y_NORM_NORMATIVE_CONTROLLER();
            y_NORM_NORMATIVE_CONTROLLER.CONTROLLER = cONTROLLER;
            return y_NORM_NORMATIVE_CONTROLLER;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CONTROLLER
        {
            get
            {
                return _CONTROLLER;
            }
            set
            {
                if (_CONTROLLER != value)
                {
                    OnCONTROLLERChanging(value);
                    ReportPropertyChanging("CONTROLLER");
                    _CONTROLLER = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CONTROLLER");
                    OnCONTROLLERChanged();
                }
            }
        }
        private global::System.Int32 _CONTROLLER;
        partial void OnCONTROLLERChanging(global::System.Int32 value);
        partial void OnCONTROLLERChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "Y_NORM_CELL_CONTROLLER_FK", "Y_NORM_NORMATIVE_CELL")]
        public EntityCollection<Y_NORM_NORMATIVE_CELL> Y_NORM_NORMATIVE_CELL
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Y_NORM_NORMATIVE_CELL>("Model.Y_NORM_CELL_CONTROLLER_FK", "Y_NORM_NORMATIVE_CELL");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Y_NORM_NORMATIVE_CELL>("Model.Y_NORM_CELL_CONTROLLER_FK", "Y_NORM_NORMATIVE_CELL", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Y_NORM_NORMATIVE_HEAD")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Y_NORM_NORMATIVE_HEAD : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Y_NORM_NORMATIVE_HEAD.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="iD_PROFILE">Исходное значение свойства ID_PROFILE.</param>
        public static Y_NORM_NORMATIVE_HEAD CreateY_NORM_NORMATIVE_HEAD(global::System.Int64 id, global::System.Int64 iD_PROFILE)
        {
            Y_NORM_NORMATIVE_HEAD y_NORM_NORMATIVE_HEAD = new Y_NORM_NORMATIVE_HEAD();
            y_NORM_NORMATIVE_HEAD.ID = id;
            y_NORM_NORMATIVE_HEAD.ID_PROFILE = iD_PROFILE;
            return y_NORM_NORMATIVE_HEAD;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID_PROFILE
        {
            get
            {
                return _ID_PROFILE;
            }
            set
            {
                OnID_PROFILEChanging(value);
                ReportPropertyChanging("ID_PROFILE");
                _ID_PROFILE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID_PROFILE");
                OnID_PROFILEChanged();
            }
        }
        private global::System.Int64 _ID_PROFILE;
        partial void OnID_PROFILEChanging(global::System.Int64 value);
        partial void OnID_PROFILEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CREATE_DATETIME
        {
            get
            {
                return _CREATE_DATETIME;
            }
            set
            {
                OnCREATE_DATETIMEChanging(value);
                ReportPropertyChanging("CREATE_DATETIME");
                _CREATE_DATETIME = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CREATE_DATETIME");
                OnCREATE_DATETIMEChanged();
            }
        }
        private Nullable<global::System.DateTime> _CREATE_DATETIME;
        partial void OnCREATE_DATETIMEChanging(Nullable<global::System.DateTime> value);
        partial void OnCREATE_DATETIMEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LAST_UPDATE_ID
        {
            get
            {
                return _LAST_UPDATE_ID;
            }
            set
            {
                OnLAST_UPDATE_IDChanging(value);
                ReportPropertyChanging("LAST_UPDATE_ID");
                _LAST_UPDATE_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LAST_UPDATE_ID");
                OnLAST_UPDATE_IDChanged();
            }
        }
        private global::System.String _LAST_UPDATE_ID;
        partial void OnLAST_UPDATE_IDChanging(global::System.String value);
        partial void OnLAST_UPDATE_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LAST_UPDATE_DATETIME
        {
            get
            {
                return _LAST_UPDATE_DATETIME;
            }
            set
            {
                OnLAST_UPDATE_DATETIMEChanging(value);
                ReportPropertyChanging("LAST_UPDATE_DATETIME");
                _LAST_UPDATE_DATETIME = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LAST_UPDATE_DATETIME");
                OnLAST_UPDATE_DATETIMEChanged();
            }
        }
        private Nullable<global::System.DateTime> _LAST_UPDATE_DATETIME;
        partial void OnLAST_UPDATE_DATETIMEChanging(Nullable<global::System.DateTime> value);
        partial void OnLAST_UPDATE_DATETIMEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CREATE_ID
        {
            get
            {
                return _CREATE_ID;
            }
            set
            {
                OnCREATE_IDChanging(value);
                ReportPropertyChanging("CREATE_ID");
                _CREATE_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CREATE_ID");
                OnCREATE_IDChanged();
            }
        }
        private global::System.String _CREATE_ID;
        partial void OnCREATE_IDChanging(global::System.String value);
        partial void OnCREATE_IDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "Y_NORM_PROF_FK", "Y_NORM_PROFILE_HEAD")]
        public Y_NORM_PROFILE_HEAD Y_NORM_PROFILE_HEAD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Y_NORM_PROFILE_HEAD>("Model.Y_NORM_PROF_FK", "Y_NORM_PROFILE_HEAD").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Y_NORM_PROFILE_HEAD>("Model.Y_NORM_PROF_FK", "Y_NORM_PROFILE_HEAD").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Y_NORM_PROFILE_HEAD> Y_NORM_PROFILE_HEADReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Y_NORM_PROFILE_HEAD>("Model.Y_NORM_PROF_FK", "Y_NORM_PROFILE_HEAD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Y_NORM_PROFILE_HEAD>("Model.Y_NORM_PROF_FK", "Y_NORM_PROFILE_HEAD", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "Y_NORM_ROW_HEAD_FK", "Y_NORM_NORMATIVE_ROW")]
        public EntityCollection<Y_NORM_NORMATIVE_ROW> Y_NORM_NORMATIVE_ROW
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Y_NORM_NORMATIVE_ROW>("Model.Y_NORM_ROW_HEAD_FK", "Y_NORM_NORMATIVE_ROW");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Y_NORM_NORMATIVE_ROW>("Model.Y_NORM_ROW_HEAD_FK", "Y_NORM_NORMATIVE_ROW", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Y_NORM_NORMATIVE_ROW")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Y_NORM_NORMATIVE_ROW : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Y_NORM_NORMATIVE_ROW.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="iD_ROW">Исходное значение свойства ID_ROW.</param>
        /// <param name="sKU">Исходное значение свойства SKU.</param>
        public static Y_NORM_NORMATIVE_ROW CreateY_NORM_NORMATIVE_ROW(global::System.Int64 id, global::System.Int64 iD_ROW, global::System.Int64 sKU)
        {
            Y_NORM_NORMATIVE_ROW y_NORM_NORMATIVE_ROW = new Y_NORM_NORMATIVE_ROW();
            y_NORM_NORMATIVE_ROW.ID = id;
            y_NORM_NORMATIVE_ROW.ID_ROW = iD_ROW;
            y_NORM_NORMATIVE_ROW.SKU = sKU;
            return y_NORM_NORMATIVE_ROW;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID_ROW
        {
            get
            {
                return _ID_ROW;
            }
            set
            {
                if (_ID_ROW != value)
                {
                    OnID_ROWChanging(value);
                    ReportPropertyChanging("ID_ROW");
                    _ID_ROW = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID_ROW");
                    OnID_ROWChanged();
                }
            }
        }
        private global::System.Int64 _ID_ROW;
        partial void OnID_ROWChanging(global::System.Int64 value);
        partial void OnID_ROWChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SKU
        {
            get
            {
                return _SKU;
            }
            set
            {
                OnSKUChanging(value);
                ReportPropertyChanging("SKU");
                _SKU = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SKU");
                OnSKUChanged();
            }
        }
        private global::System.Int64 _SKU;
        partial void OnSKUChanging(global::System.Int64 value);
        partial void OnSKUChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> MAX_COLUMN
        {
            get
            {
                return _MAX_COLUMN;
            }
            set
            {
                OnMAX_COLUMNChanging(value);
                ReportPropertyChanging("MAX_COLUMN");
                _MAX_COLUMN = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MAX_COLUMN");
                OnMAX_COLUMNChanged();
            }
        }
        private Nullable<global::System.Int16> _MAX_COLUMN;
        partial void OnMAX_COLUMNChanging(Nullable<global::System.Int16> value);
        partial void OnMAX_COLUMNChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> DELTA
        {
            get
            {
                return _DELTA;
            }
            set
            {
                OnDELTAChanging(value);
                ReportPropertyChanging("DELTA");
                _DELTA = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DELTA");
                OnDELTAChanged();
            }
        }
        private Nullable<global::System.Decimal> _DELTA;
        partial void OnDELTAChanging(Nullable<global::System.Decimal> value);
        partial void OnDELTAChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> SEQ_NUM
        {
            get
            {
                return _SEQ_NUM;
            }
            set
            {
                OnSEQ_NUMChanging(value);
                ReportPropertyChanging("SEQ_NUM");
                _SEQ_NUM = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SEQ_NUM");
                OnSEQ_NUMChanged();
            }
        }
        private Nullable<global::System.Int64> _SEQ_NUM;
        partial void OnSEQ_NUMChanging(Nullable<global::System.Int64> value);
        partial void OnSEQ_NUMChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DELTA_MIN
        {
            get
            {
                return _DELTA_MIN;
            }
            set
            {
                OnDELTA_MINChanging(value);
                ReportPropertyChanging("DELTA_MIN");
                _DELTA_MIN = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DELTA_MIN");
                OnDELTA_MINChanged();
            }
        }
        private Nullable<global::System.Int32> _DELTA_MIN;
        partial void OnDELTA_MINChanging(Nullable<global::System.Int32> value);
        partial void OnDELTA_MINChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DELTA_MAX
        {
            get
            {
                return _DELTA_MAX;
            }
            set
            {
                OnDELTA_MAXChanging(value);
                ReportPropertyChanging("DELTA_MAX");
                _DELTA_MAX = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DELTA_MAX");
                OnDELTA_MAXChanged();
            }
        }
        private Nullable<global::System.Int32> _DELTA_MAX;
        partial void OnDELTA_MAXChanging(Nullable<global::System.Int32> value);
        partial void OnDELTA_MAXChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> SKU_MIN
        {
            get
            {
                return _SKU_MIN;
            }
            set
            {
                OnSKU_MINChanging(value);
                ReportPropertyChanging("SKU_MIN");
                _SKU_MIN = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SKU_MIN");
                OnSKU_MINChanged();
            }
        }
        private Nullable<global::System.Int64> _SKU_MIN;
        partial void OnSKU_MINChanging(Nullable<global::System.Int64> value);
        partial void OnSKU_MINChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> SKU_MAX
        {
            get
            {
                return _SKU_MAX;
            }
            set
            {
                OnSKU_MAXChanging(value);
                ReportPropertyChanging("SKU_MAX");
                _SKU_MAX = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SKU_MAX");
                OnSKU_MAXChanged();
            }
        }
        private Nullable<global::System.Int64> _SKU_MAX;
        partial void OnSKU_MAXChanging(Nullable<global::System.Int64> value);
        partial void OnSKU_MAXChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "Y_NORM_CELL_ROW_FK", "Y_NORM_NORMATIVE_CELL")]
        public EntityCollection<Y_NORM_NORMATIVE_CELL> Y_NORM_NORMATIVE_CELL
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Y_NORM_NORMATIVE_CELL>("Model.Y_NORM_CELL_ROW_FK", "Y_NORM_NORMATIVE_CELL");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Y_NORM_NORMATIVE_CELL>("Model.Y_NORM_CELL_ROW_FK", "Y_NORM_NORMATIVE_CELL", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "Y_NORM_ROW_HEAD_FK", "Y_NORM_NORMATIVE_HEAD")]
        public Y_NORM_NORMATIVE_HEAD Y_NORM_NORMATIVE_HEAD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Y_NORM_NORMATIVE_HEAD>("Model.Y_NORM_ROW_HEAD_FK", "Y_NORM_NORMATIVE_HEAD").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Y_NORM_NORMATIVE_HEAD>("Model.Y_NORM_ROW_HEAD_FK", "Y_NORM_NORMATIVE_HEAD").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Y_NORM_NORMATIVE_HEAD> Y_NORM_NORMATIVE_HEADReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Y_NORM_NORMATIVE_HEAD>("Model.Y_NORM_ROW_HEAD_FK", "Y_NORM_NORMATIVE_HEAD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Y_NORM_NORMATIVE_HEAD>("Model.Y_NORM_ROW_HEAD_FK", "Y_NORM_NORMATIVE_HEAD", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Y_NORM_PARAMETERS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Y_NORM_PARAMETERS : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Y_NORM_PARAMETERS.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        public static Y_NORM_PARAMETERS CreateY_NORM_PARAMETERS(global::System.Int64 id)
        {
            Y_NORM_PARAMETERS y_NORM_PARAMETERS = new Y_NORM_PARAMETERS();
            y_NORM_PARAMETERS.ID = id;
            return y_NORM_PARAMETERS;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PARAM_TYPE
        {
            get
            {
                return _PARAM_TYPE;
            }
            set
            {
                OnPARAM_TYPEChanging(value);
                ReportPropertyChanging("PARAM_TYPE");
                _PARAM_TYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PARAM_TYPE");
                OnPARAM_TYPEChanged();
            }
        }
        private global::System.String _PARAM_TYPE;
        partial void OnPARAM_TYPEChanging(global::System.String value);
        partial void OnPARAM_TYPEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SOURCE
        {
            get
            {
                return _SOURCE;
            }
            set
            {
                OnSOURCEChanging(value);
                ReportPropertyChanging("SOURCE");
                _SOURCE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SOURCE");
                OnSOURCEChanged();
            }
        }
        private global::System.String _SOURCE;
        partial void OnSOURCEChanging(global::System.String value);
        partial void OnSOURCEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DESCRIPTION
        {
            get
            {
                return _DESCRIPTION;
            }
            set
            {
                OnDESCRIPTIONChanging(value);
                ReportPropertyChanging("DESCRIPTION");
                _DESCRIPTION = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DESCRIPTION");
                OnDESCRIPTIONChanged();
            }
        }
        private global::System.String _DESCRIPTION;
        partial void OnDESCRIPTIONChanging(global::System.String value);
        partial void OnDESCRIPTIONChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DESC_RU
        {
            get
            {
                return _DESC_RU;
            }
            set
            {
                OnDESC_RUChanging(value);
                ReportPropertyChanging("DESC_RU");
                _DESC_RU = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DESC_RU");
                OnDESC_RUChanged();
            }
        }
        private global::System.String _DESC_RU;
        partial void OnDESC_RUChanging(global::System.String value);
        partial void OnDESC_RUChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UNIT_BY_PARAM_VALUE
        {
            get
            {
                return _UNIT_BY_PARAM_VALUE;
            }
            set
            {
                OnUNIT_BY_PARAM_VALUEChanging(value);
                ReportPropertyChanging("UNIT_BY_PARAM_VALUE");
                _UNIT_BY_PARAM_VALUE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UNIT_BY_PARAM_VALUE");
                OnUNIT_BY_PARAM_VALUEChanged();
            }
        }
        private global::System.String _UNIT_BY_PARAM_VALUE;
        partial void OnUNIT_BY_PARAM_VALUEChanging(global::System.String value);
        partial void OnUNIT_BY_PARAM_VALUEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CREATE_ID
        {
            get
            {
                return _CREATE_ID;
            }
            set
            {
                OnCREATE_IDChanging(value);
                ReportPropertyChanging("CREATE_ID");
                _CREATE_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CREATE_ID");
                OnCREATE_IDChanged();
            }
        }
        private global::System.String _CREATE_ID;
        partial void OnCREATE_IDChanging(global::System.String value);
        partial void OnCREATE_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CREATE_DATETIME
        {
            get
            {
                return _CREATE_DATETIME;
            }
            set
            {
                OnCREATE_DATETIMEChanging(value);
                ReportPropertyChanging("CREATE_DATETIME");
                _CREATE_DATETIME = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CREATE_DATETIME");
                OnCREATE_DATETIMEChanged();
            }
        }
        private Nullable<global::System.DateTime> _CREATE_DATETIME;
        partial void OnCREATE_DATETIMEChanging(Nullable<global::System.DateTime> value);
        partial void OnCREATE_DATETIMEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LAST_UPDATE_ID
        {
            get
            {
                return _LAST_UPDATE_ID;
            }
            set
            {
                OnLAST_UPDATE_IDChanging(value);
                ReportPropertyChanging("LAST_UPDATE_ID");
                _LAST_UPDATE_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LAST_UPDATE_ID");
                OnLAST_UPDATE_IDChanged();
            }
        }
        private global::System.String _LAST_UPDATE_ID;
        partial void OnLAST_UPDATE_IDChanging(global::System.String value);
        partial void OnLAST_UPDATE_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LAST_UPDATE_DATETIME
        {
            get
            {
                return _LAST_UPDATE_DATETIME;
            }
            set
            {
                OnLAST_UPDATE_DATETIMEChanging(value);
                ReportPropertyChanging("LAST_UPDATE_DATETIME");
                _LAST_UPDATE_DATETIME = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LAST_UPDATE_DATETIME");
                OnLAST_UPDATE_DATETIMEChanged();
            }
        }
        private Nullable<global::System.DateTime> _LAST_UPDATE_DATETIME;
        partial void OnLAST_UPDATE_DATETIMEChanging(Nullable<global::System.DateTime> value);
        partial void OnLAST_UPDATE_DATETIMEChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "Y_NORM_CELL_PARAM_FK", "Y_NORM_NORMATIVE_CELL")]
        public EntityCollection<Y_NORM_NORMATIVE_CELL> Y_NORM_NORMATIVE_CELL
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Y_NORM_NORMATIVE_CELL>("Model.Y_NORM_CELL_PARAM_FK", "Y_NORM_NORMATIVE_CELL");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Y_NORM_NORMATIVE_CELL>("Model.Y_NORM_CELL_PARAM_FK", "Y_NORM_NORMATIVE_CELL", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "Y_NORM_PROF_DETAIL_PARAM_FK", "Y_NORM_PROFILE_DETAIL")]
        public EntityCollection<Y_NORM_PROFILE_DETAIL> Y_NORM_PROFILE_DETAIL
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Y_NORM_PROFILE_DETAIL>("Model.Y_NORM_PROF_DETAIL_PARAM_FK", "Y_NORM_PROFILE_DETAIL");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Y_NORM_PROFILE_DETAIL>("Model.Y_NORM_PROF_DETAIL_PARAM_FK", "Y_NORM_PROFILE_DETAIL", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Y_NORM_PROFILE_DETAIL")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Y_NORM_PROFILE_DETAIL : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Y_NORM_PROFILE_DETAIL.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="iD_PARAM">Исходное значение свойства ID_PARAM.</param>
        public static Y_NORM_PROFILE_DETAIL CreateY_NORM_PROFILE_DETAIL(global::System.Int64 id, global::System.Int64 iD_PARAM)
        {
            Y_NORM_PROFILE_DETAIL y_NORM_PROFILE_DETAIL = new Y_NORM_PROFILE_DETAIL();
            y_NORM_PROFILE_DETAIL.ID = id;
            y_NORM_PROFILE_DETAIL.ID_PARAM = iD_PARAM;
            return y_NORM_PROFILE_DETAIL;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID_PARAM
        {
            get
            {
                return _ID_PARAM;
            }
            set
            {
                if (_ID_PARAM != value)
                {
                    OnID_PARAMChanging(value);
                    ReportPropertyChanging("ID_PARAM");
                    _ID_PARAM = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID_PARAM");
                    OnID_PARAMChanged();
                }
            }
        }
        private global::System.Int64 _ID_PARAM;
        partial void OnID_PARAMChanging(global::System.Int64 value);
        partial void OnID_PARAMChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VALUE
        {
            get
            {
                return _VALUE;
            }
            set
            {
                OnVALUEChanging(value);
                ReportPropertyChanging("VALUE");
                _VALUE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VALUE");
                OnVALUEChanged();
            }
        }
        private global::System.String _VALUE;
        partial void OnVALUEChanging(global::System.String value);
        partial void OnVALUEChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "Y_NORM_PROF_DETAIL_PARAM_FK", "Y_NORM_PARAMETERS")]
        public Y_NORM_PARAMETERS Y_NORM_PARAMETERS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Y_NORM_PARAMETERS>("Model.Y_NORM_PROF_DETAIL_PARAM_FK", "Y_NORM_PARAMETERS").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Y_NORM_PARAMETERS>("Model.Y_NORM_PROF_DETAIL_PARAM_FK", "Y_NORM_PARAMETERS").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Y_NORM_PARAMETERS> Y_NORM_PARAMETERSReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Y_NORM_PARAMETERS>("Model.Y_NORM_PROF_DETAIL_PARAM_FK", "Y_NORM_PARAMETERS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Y_NORM_PARAMETERS>("Model.Y_NORM_PROF_DETAIL_PARAM_FK", "Y_NORM_PARAMETERS", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "Y_NORM_PROFILE_DET_HEAD_FK", "Y_NORM_PROFILE_HEAD")]
        public Y_NORM_PROFILE_HEAD Y_NORM_PROFILE_HEAD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Y_NORM_PROFILE_HEAD>("Model.Y_NORM_PROFILE_DET_HEAD_FK", "Y_NORM_PROFILE_HEAD").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Y_NORM_PROFILE_HEAD>("Model.Y_NORM_PROFILE_DET_HEAD_FK", "Y_NORM_PROFILE_HEAD").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Y_NORM_PROFILE_HEAD> Y_NORM_PROFILE_HEADReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Y_NORM_PROFILE_HEAD>("Model.Y_NORM_PROFILE_DET_HEAD_FK", "Y_NORM_PROFILE_HEAD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Y_NORM_PROFILE_HEAD>("Model.Y_NORM_PROFILE_DET_HEAD_FK", "Y_NORM_PROFILE_HEAD", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Y_NORM_PROFILE_HEAD")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Y_NORM_PROFILE_HEAD : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Y_NORM_PROFILE_HEAD.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        public static Y_NORM_PROFILE_HEAD CreateY_NORM_PROFILE_HEAD(global::System.Int64 id)
        {
            Y_NORM_PROFILE_HEAD y_NORM_PROFILE_HEAD = new Y_NORM_PROFILE_HEAD();
            y_NORM_PROFILE_HEAD.ID = id;
            return y_NORM_PROFILE_HEAD;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DESCRIPTION
        {
            get
            {
                return _DESCRIPTION;
            }
            set
            {
                OnDESCRIPTIONChanging(value);
                ReportPropertyChanging("DESCRIPTION");
                _DESCRIPTION = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DESCRIPTION");
                OnDESCRIPTIONChanged();
            }
        }
        private global::System.String _DESCRIPTION;
        partial void OnDESCRIPTIONChanging(global::System.String value);
        partial void OnDESCRIPTIONChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ID_EQUIP
        {
            get
            {
                return _ID_EQUIP;
            }
            set
            {
                OnID_EQUIPChanging(value);
                ReportPropertyChanging("ID_EQUIP");
                _ID_EQUIP = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID_EQUIP");
                OnID_EQUIPChanged();
            }
        }
        private Nullable<global::System.Int64> _ID_EQUIP;
        partial void OnID_EQUIPChanging(Nullable<global::System.Int64> value);
        partial void OnID_EQUIPChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SECTION
        {
            get
            {
                return _SECTION;
            }
            set
            {
                OnSECTIONChanging(value);
                ReportPropertyChanging("SECTION");
                _SECTION = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SECTION");
                OnSECTIONChanged();
            }
        }
        private global::System.String _SECTION;
        partial void OnSECTIONChanging(global::System.String value);
        partial void OnSECTIONChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LAST_UPDATE_ID
        {
            get
            {
                return _LAST_UPDATE_ID;
            }
            set
            {
                OnLAST_UPDATE_IDChanging(value);
                ReportPropertyChanging("LAST_UPDATE_ID");
                _LAST_UPDATE_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LAST_UPDATE_ID");
                OnLAST_UPDATE_IDChanged();
            }
        }
        private global::System.String _LAST_UPDATE_ID;
        partial void OnLAST_UPDATE_IDChanging(global::System.String value);
        partial void OnLAST_UPDATE_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LAST_UPDATE_DATETIME
        {
            get
            {
                return _LAST_UPDATE_DATETIME;
            }
            set
            {
                OnLAST_UPDATE_DATETIMEChanging(value);
                ReportPropertyChanging("LAST_UPDATE_DATETIME");
                _LAST_UPDATE_DATETIME = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LAST_UPDATE_DATETIME");
                OnLAST_UPDATE_DATETIMEChanged();
            }
        }
        private Nullable<global::System.DateTime> _LAST_UPDATE_DATETIME;
        partial void OnLAST_UPDATE_DATETIMEChanging(Nullable<global::System.DateTime> value);
        partial void OnLAST_UPDATE_DATETIMEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CREATE_DATETIME
        {
            get
            {
                return _CREATE_DATETIME;
            }
            set
            {
                OnCREATE_DATETIMEChanging(value);
                ReportPropertyChanging("CREATE_DATETIME");
                _CREATE_DATETIME = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CREATE_DATETIME");
                OnCREATE_DATETIMEChanged();
            }
        }
        private Nullable<global::System.DateTime> _CREATE_DATETIME;
        partial void OnCREATE_DATETIMEChanging(Nullable<global::System.DateTime> value);
        partial void OnCREATE_DATETIMEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CREATE_ID
        {
            get
            {
                return _CREATE_ID;
            }
            set
            {
                OnCREATE_IDChanging(value);
                ReportPropertyChanging("CREATE_ID");
                _CREATE_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CREATE_ID");
                OnCREATE_IDChanged();
            }
        }
        private global::System.String _CREATE_ID;
        partial void OnCREATE_IDChanging(global::System.String value);
        partial void OnCREATE_IDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "Y_NORM_PROF_FK", "Y_NORM_NORMATIVE_HEAD")]
        public EntityCollection<Y_NORM_NORMATIVE_HEAD> Y_NORM_NORMATIVE_HEAD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Y_NORM_NORMATIVE_HEAD>("Model.Y_NORM_PROF_FK", "Y_NORM_NORMATIVE_HEAD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Y_NORM_NORMATIVE_HEAD>("Model.Y_NORM_PROF_FK", "Y_NORM_NORMATIVE_HEAD", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "Y_NORM_PROFILE_DET_HEAD_FK", "Y_NORM_PROFILE_DETAIL")]
        public EntityCollection<Y_NORM_PROFILE_DETAIL> Y_NORM_PROFILE_DETAIL
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Y_NORM_PROFILE_DETAIL>("Model.Y_NORM_PROFILE_DET_HEAD_FK", "Y_NORM_PROFILE_DETAIL");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Y_NORM_PROFILE_DETAIL>("Model.Y_NORM_PROFILE_DET_HEAD_FK", "Y_NORM_PROFILE_DETAIL", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "Y_NORM_PROFILE_EQUIP", "Y_NORM_EQUIP_TYPE")]
        public Y_NORM_EQUIP_TYPE Y_NORM_EQUIP_TYPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Y_NORM_EQUIP_TYPE>("Model.Y_NORM_PROFILE_EQUIP", "Y_NORM_EQUIP_TYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Y_NORM_EQUIP_TYPE>("Model.Y_NORM_PROFILE_EQUIP", "Y_NORM_EQUIP_TYPE").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Y_NORM_EQUIP_TYPE> Y_NORM_EQUIP_TYPEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Y_NORM_EQUIP_TYPE>("Model.Y_NORM_PROFILE_EQUIP", "Y_NORM_EQUIP_TYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Y_NORM_EQUIP_TYPE>("Model.Y_NORM_PROFILE_EQUIP", "Y_NORM_EQUIP_TYPE", value);
                }
            }
        }

        #endregion
    }

    #endregion
    #region ComplexTypes
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Model", Name="Y_NORM_MANAGEMENT_GET_PARAMETER_VALUES_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Y_NORM_MANAGEMENT_GET_PARAMETER_VALUES_Result : ComplexObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Y_NORM_MANAGEMENT_GET_PARAMETER_VALUES_Result.
        /// </summary>
        /// <param name="vALUE">Исходное значение свойства VALUE.</param>
        /// <param name="nAME">Исходное значение свойства NAME.</param>
        public static Y_NORM_MANAGEMENT_GET_PARAMETER_VALUES_Result CreateY_NORM_MANAGEMENT_GET_PARAMETER_VALUES_Result(global::System.String vALUE, global::System.String nAME)
        {
            Y_NORM_MANAGEMENT_GET_PARAMETER_VALUES_Result y_NORM_MANAGEMENT_GET_PARAMETER_VALUES_Result = new Y_NORM_MANAGEMENT_GET_PARAMETER_VALUES_Result();
            y_NORM_MANAGEMENT_GET_PARAMETER_VALUES_Result.VALUE = vALUE;
            y_NORM_MANAGEMENT_GET_PARAMETER_VALUES_Result.NAME = nAME;
            return y_NORM_MANAGEMENT_GET_PARAMETER_VALUES_Result;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VALUE
        {
            get
            {
                return _VALUE;
            }
            set
            {
                OnVALUEChanging(value);
                ReportPropertyChanging("VALUE");
                _VALUE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VALUE");
                OnVALUEChanged();
            }
        }
        private global::System.String _VALUE;
        partial void OnVALUEChanging(global::System.String value);
        partial void OnVALUEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();

        #endregion
    }

    #endregion
    
}
